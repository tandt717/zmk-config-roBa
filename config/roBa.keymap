#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q         &kp W           &kp E         &kp R  &kp T                                                  &kp Y      &kp U  &kp I     &kp O     &kp P
&kp A         &kp S           &kp D         &kp F  &kp G             &lt 6 ESCAPE          &none          &kp H      &kp J  &kp K     &kp L     &kp ENTER
&kp Z         &kp X           &kp C         &kp V  &kp B             &kp TAB               &none          &kp N      &kp M  &mkp MB1  &mkp MB2  &mkp MB5
&kp LEFT_WIN  &kp LEFT_SHIFT  &kp LEFT_ALT  &mo 1  &lt 2 LANGUAGE_1  &lt 3 LANGUAGE_2      &kp BACKSPACE  &kp SPACE                             &mkp MB4
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOLS {
            bindings = <
&kp PERCENT  &kp DOLLAR  &kp AMPERSAND    &kp LCTRL     &kp SLASH                                         &kp BACKSLASH   &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp LESS_THAN  &kp GREATER_THAN
&kp AT_SIGN  &kp HASH    &kp ASTERISK     &kp PLUS      &kp EQUAL             &trans              &trans  &kp UNDERSCORE  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp SEMICOLON  &kp COLON
&kp MINUS    &kp TILDE   &kp EXCLAMATION  &kp QUESTION  &kp LS(LG(NUMBER_4))  &kp LS(LG(N5))      &trans  &kp PIPE        &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp SQT        &kp DOUBLE_QUOTES
&trans       &trans      &trans           &trans        &trans                &trans              &trans  &trans                                                                      &kp PIPE
            >;
        };

        NUM {
            bindings = <
&trans       &kp N7        &kp N8  &kp N9  &kp EQUAL                            &none      &none           &kp UP           &none      &none
&kp LA(TAB)  &kp NUMBER_4  &kp N5  &kp N6  &kp ASTERISK  &kp SLASH      &trans  &kp PG_UP  &kp LEFT        &kp DOWN         &kp RIGHT  &trans
&trans       &kp N1        &kp N2  &kp N3  &kp PLUS      &kp MINUS      &trans  &kp PG_DN  &msc SCRL_LEFT  &msc SCRL_RIGHT  &trans     &trans
&trans       &kp N0        &kp N0  &trans  &trans        &trans         &trans  &trans                                                 &trans
            >;
        };

        ARROW {
            bindings = <
&none  &kp F7  &kp F8  &kp F9  &kp F10                      &kp C_VOL_UP  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 4
&none  &kp F4  &kp F5  &kp F6  &kp F11  &none       &none   &kp C_VOL_DN  &none         &none         &none         &none
&none  &kp F1  &kp F2  &kp F3  &kp F12  &none       &none   &kp K_MUTE    &none         &none         &none         &bt BT_CLR
&none  &none   &none   &trans  &trans   &trans      &trans  &trans                                                  &bt BT_CLR_ALL
            >;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PG_DN>;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans            &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&kp LS(TAB)       &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&kp LEFT_CONTROL  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans            &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
